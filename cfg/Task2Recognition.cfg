#! /usr/bin/env python
#*  All rights reserved.
#*
#*  Redistribution and use in source and binary forms, with or without
#*  modification, are permitted provided that the following conditions
#*  are met:
#*
#*   * Redistributions of source code must retain the above copyright
#*     notice, this list of conditions and the following disclaimer.
#*   * Redistributions in binary form must reproduce the above
#*     copyright notice, this list of conditions and the following
#*     disclaimer in the documentation and/or other materials provided
#*     with the distribution.
#*   * Neither the name of the Willow Garage nor the names of its
#*     contributors may be used to endorse or promote products derived
#*     from this software without specific prior written permission.
#*
#*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#*  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#*  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
#*  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
#*  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
#*  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
#*  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
#*  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
#*  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
#*  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
#*  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#*  POSSIBILITY OF SUCH DAMAGE.
#***********************************************************

# Author:

PACKAGE='task2_recognition'

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

#       Name                       Type       Reconfiguration level            Description                       Default   Min   Max
#gen.add("velocity_scale_factor",  double_t,  0,                               "Maximum velocity scale factor",  0.5,      0.0,  1.0)

# Label of people

gen.add("person_undefined",          str_t, 0,                                "Name of the Undefined label",      "undefined")
gen.add("person_kimble",             str_t, 0,                                "Name of the Kimble label",      "kimble")
gen.add("person_deliman",            str_t, 0,                                "Name of the Deliman label",      "deliman")
gen.add("person_postman",            str_t, 0,                                "Name of the Postman label",      "postman")
gen.add("person_plumber",            str_t, 0,                                "Name of the Plumber label",      "plumber")

# Sentences to be said

gen.add("sentence_ask_person",              str_t, 0,                "Sentence said when asking who is at the door",      "Who are you?")

# Speech ID to recognise voice commands


gen.add("speech_identification",      int_t, 0,                "ID of the comand that identifies the person",  21,20,30)

# Path to store the Kimble and plumber images
gen.add("kimble_image_path",             str_t, 0,                                "Name of the Kimble image path",      "/home/pal/iri-lab/labrobotica/algorithms/erl_person_classifier/person_faces/kimble/kimble.jpeg")
gen.add("postman_image_path",             str_t, 0,                                "Name of the Postman image path",      "/home/pal/iri-lab/labrobotica/algorithms/erl_person_classifier/person_faces/postman/postman.jpg")
gen.add("store_postman_kimble",             bool_t, 0,                      "Click to store the images", False)

# Additional parameters

gen.add("color_yellow_id",        int_t, 0,                "ID of the color yellow",          5,0,12)
gen.add("color_orange_id",        int_t, 0,                "ID of the color yellow",          4,0,12)
gen.add("max_action_retries",        int_t, 0,                                "Total retries for each action",1,1,10)
gen.add("start_recognition",        bool_t, 0,              "Start recognition process",        False)
gen.add("max_identification_retries",        int_t, 0,                                "Total retries for understanding amazon echo",1,1,10)



exit(gen.generate(PACKAGE, "Task2RecognitionAlgorithm", "Task2Recognition"))
